// ==UserScript==
// @name         Admin Enhancements
// @namespace    admin
// @version      0.6
// @description  Chris's Admin Enhancements
// @author       Chris Pittelko
// @match        https://admin.ring.com/*
// @require      http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js
// @require      https://gist.github.com/raw/2625891/waitForKeyElements.js
// @require      http://code.highcharts.com/highcharts.js
// @grant        GM_addStyle
// @updateURL    https://raw.githubusercontent.com/EpicChloe/AdminEnhancements/master/AdminEnhancements.user
// ==/UserScript==

/* Change Log
v0.6
Buttons and Spree Link should work more reliably.
Added fixes for AJAX calls that updates the page.
Added basic comments to code and changed some structure for readability.
v0.5
Generate Battery Report button now works.
v0.4.5
Summary button now works.
Fixed some css issues.
v0.4.1
Changed placeholder to button. Not functional at the moment.
v0.4
Converted to using jNode checks. Should only be checking the node that was changed instead of the entire document.
v0.3.2
Fixed MSP Error not highlighting when blank
v0.3.1
Fixed MSP Errors not highlighting
v0.3
Added update URL
v0.2
Added Low Battery Warning (<15%)
Changed Update Method to look for Ajax changes instead of Pulse Method
*/

// Color Guide:
// Red: MSP430 Error
// Orange: Low Battery (<15%)
// Blue: OTA/Setup
// Yellow: RSSI < -70

// Adding CSS
GM_addStyle('a.APESummaryButton {position: relative;display: inline; !important}');
GM_addStyle('a.APESummaryButton span {position: absolute; width:140px; color:black; height: auto; line-height: 30px; text-align: center; visibility: hidden; border-radius: 6px; !important}');
//GM_addStyle('a.APESummaryButton span:after{content:'';position:absolute;top:50%;right:100%;margin-top:-8px;width:0;height:0;border-right:8px solid #000;border-top:8px solid transparent;border-bottom:8px solid transparent !important}');
GM_addStyle('a:hover.APESummaryButton span {visibility: visible; opacity: 1; left: 100%; top: 50%; margin-top: -15px; margin-left: 15px; z-index: 999; !important}');
GM_addStyle('.APETable {box-shadow: 10px 10px 20px 2px rgba(0,0,0,0.5); border: 2px solid #000; !important}');
GM_addStyle('#APEcontainer {min-width: 310px; margin: 0 auto}');

// Updates Report Listing when updated through AJAX calls.
function highlightReports (jNode) {

    var rssiValue = jNode.find('.key.ng-binding:contains("rssi")').parent().find(':nth-child(2)').html(),
        batteryValue = jNode.find('.key.ng-binding:contains("battery_percentage")').parent().find(':nth-child(2)').html(),
        mspValue = jNode.find('.key.ng-binding:contains("msp430_error")').parent().find(':nth-child(2)').html(),
        IRCutFilterIR = jNode.find('.key.ng-binding:contains("light_ir")').parent().find(':nth-child(2)').html(),
        IRCutFilterVis = jNode.find('.key.ng-binding:contains("light_vis")').parent().find(':nth-child(2)').html(),
        IRCutFilterOn,
        startStream = jNode.find('.key.ng-binding:contains("start_stream_profile")').parent().find(':nth-child(2)').html(),
        endStream = jNode.find('.key.ng-binding:contains("end_stream_profile")').parent().find(':nth-child(2)').html(),
        streamUp = jNode.find('.key.ng-binding:contains("num_stream_upgrades")').parent().find(':nth-child(2)').html(),
        streamDown = jNode.find('.key.ng-binding:contains("num_stream_downgrades")').parent().find(':nth-child(2)').html(),
        buttonTooltip;
    
    if (rssiValue <= -70 && rssiValue !== null) {
        jNode.css("background-color", "#fcf8e3");
    }
    
    if (batteryValue <= 15 && batteryValue !== null) {
        jNode.css("background-color", "#ffc370");
    }
    
    jNode.find('.context.ng-binding:contains("After OTA")').parent().css("background-color", "#d9edf7");
    
    jNode.find('.context.ng-binding:contains("After Setup")').parent().css("background-color", "#d9edf7");
    
    if (mspValue != 0 && mspValue !== null) {
        jNode.css("background-color", "#f2dede");
    }
    
    if (IRCutFilterIR + IRCutFilterVis <= 12) {
        IRCutFilterOn = "On";
    } else {
        IRCutFilterOn = "Off";
    }
    
    buttonTooltip = [
        '<a class="btn btn-xs btn-primary APESummaryButton">Summary<span>',
        '<table class="table table-bordered APETable">',
        '<tr><td>RSSI:</td><td>'+rssiValue+'</td><td>Battery:</td><td>'+batteryValue+'</td></tr>',
        '<tr><td>MSP Error:</td><td>'+mspValue+'</td><td>IR Cut Filter:</td><td>'+IRCutFilterOn+'</td></tr>',
        '<tr><td>Stream Start:</td><td>'+startStream+'</td><td>Stream End:</td><td>'+endStream+'</td></tr>',
        '<tr><td>Stream Upgrades:</td><td>'+streamUp+'</td><td>Stream Downgrades:</td><td>'+streamDown+'</td></tr>',
        '</table>',
        '</span></a>'
    ];
    
    jNode.find('.status_date.ng-binding').append(buttonTooltip.join(''));

};

// Adds Report Listings to AJAX watch list
waitForKeyElements ("tr.ng-scope", highlightReports);

// Builds Battery Chart using High Charts Library
function buildBatteryReport() {
    $('#APEcontainer').highcharts({
        chart: {
            type: 'line'
        },
        title: {
            text: 'Battery Report'
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            title: {
                text: 'Reports (Oldest -> Newest)'
            }
        },
        yAxis: {
            title: {
                text: 'Battery Percentage (%)'
            },
            min: 0,
            max: 100
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: true
                },
                enableMouseTracking: false
            }
        },
        series: [{
            name: 'Unit Battery',
            data: (function () {
                var batteryData = $('.key.ng-binding:contains("battery_percentage")').parent(),
                    batteryReport,
                    batteryValue,
                    data = [];
                for (var key in batteryData) {
                    if (batteryData.hasOwnProperty(key)) {
                        batteryReport = batteryData.eq(key);
                        batteryValue = batteryReport.find(':nth-child(2)').html();
                        if (batteryValue !== null) {
                            data.unshift(parseInt(batteryValue));
                        }
                    }
                }
                return data;
            }())
        }]
    });
};

// Registers first run of the APE Renderer
$(document).ready(function() {
    APERender();
});

// Checks if URL changes and if APE Renderer needs to be enabled again
var oldLocation = location.href;
setInterval(function() {
    if(location.href != oldLocation) {
        console.log('URL Changed!');
        APERender();
        oldLocation = location.href
    }
}, 1000); // check every second

// Renders Generate Battery Report Button and corrects Spree Link 
function APERender() {
    var pingCheck = 0,
        pingSpree = 1,
        pingReports = 1;
    var checkExist = setInterval(function() {
        console.log('Ping!');
        pingCheck ++;
        if ($('[data-title="\'Spree link\'"]').length && pingSpree) {
            console.log("Found Spree Link! Correcting Link!");
            var link = $('[data-title="\'Spree link\'"]').html();
            link = link.trim().replace('https://', '');
            console.log(link);
            $('[data-title="\'Spree link\'"]').html(link);
            pingSpree = 0;
        }
        if ($('#reports_resume').length && pingReports) {
            console.log('Found Reports! Generating Battery Report Button!');
            $('.reports.cf').prepend('<button type="button" class="btn btn-primary" id="BatteryReportButton" data-toggle="modal" data-target="#APEBatteryReport">Generate Battery Report</button>');
            $('#BatteryReportButton').parent().prepend('<div id="APEcontainer"></div>');
            $('#BatteryReportButton').on( "click", buildBatteryReport );
            pingReports = 0;
        }
        if (pingCheck > 10) {
            clearInterval(checkExist);
        }
    }, 1000);
}
